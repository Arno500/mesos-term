[{"/usr/app/src/index.tsx":"1","/usr/app/src/hooks/NotificationContext.ts":"2","/usr/app/src/hooks/WindowLoadedContext.ts":"3","/usr/app/src/Layout.tsx":"4","/usr/app/src/views/TerminalView.tsx":"5","/usr/app/src/components/FileBrowser.tsx":"6","/usr/app/src/services/MesosTerm.ts":"7","/usr/app/src/App.tsx":"8","/usr/app/src/components/FileBrowserList.tsx":"9","/usr/app/src/utils/FileSize.ts":"10","/usr/app/src/components/DelegationFormDialog.tsx":"11","/usr/app/src/components/FitAddon.ts":"12","/usr/app/src/serviceWorker.ts":"13","/usr/app/src/components/FileDescriptionBar.tsx":"14","/usr/app/src/hooks/FileReader.ts":"15","/usr/app/src/hooks/MemoizedCallback.ts":"16","/usr/app/src/constants.ts":"17","/usr/app/src/components/XTerm.tsx":"18"},{"size":452,"mtime":1603897860393,"results":"19","hashOfConfig":"20"},{"size":1916,"mtime":1603897860393,"results":"21","hashOfConfig":"20"},{"size":454,"mtime":1603897860393,"results":"22","hashOfConfig":"20"},{"size":2008,"mtime":1603897860389,"results":"23","hashOfConfig":"20"},{"size":8982,"mtime":1603897860393,"results":"24","hashOfConfig":"20"},{"size":1073,"mtime":1603897860393,"results":"25","hashOfConfig":"20"},{"size":3824,"mtime":1603897860393,"results":"26","hashOfConfig":"20"},{"size":1618,"mtime":1603897860389,"results":"27","hashOfConfig":"20"},{"size":4844,"mtime":1603897860393,"results":"28","hashOfConfig":"20"},{"size":374,"mtime":1603897860393,"results":"29","hashOfConfig":"20"},{"size":5382,"mtime":1603897860393,"results":"30","hashOfConfig":"20"},{"size":2803,"mtime":1603897860393,"results":"31","hashOfConfig":"20"},{"size":5213,"mtime":1603897860393,"results":"32","hashOfConfig":"20"},{"size":3648,"mtime":1603897860393,"results":"33","hashOfConfig":"20"},{"size":3954,"mtime":1603897860393,"results":"34","hashOfConfig":"20"},{"size":890,"mtime":1603897860393,"results":"35","hashOfConfig":"20"},{"size":58,"mtime":1603897860393,"results":"36","hashOfConfig":"20"},{"size":7234,"mtime":1603897860393,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ty5jn",{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/app/src/index.tsx",[],"/usr/app/src/hooks/NotificationContext.ts",["78","79","80","81"],"/usr/app/src/hooks/WindowLoadedContext.ts",[],"/usr/app/src/Layout.tsx",["82"],"/usr/app/src/views/TerminalView.tsx",["83"],"/usr/app/src/components/FileBrowser.tsx",["84"],"import React from \"react\";\nimport { FileDescription } from \"../services/MesosTerm\";\nimport { Layout } from \"./FileDescriptionBar\";\nimport FileBrowserGrid from \"./FileBrowserGrid\";\nimport FileBrowserList from \"./FileBrowserList\";\n\n\ninterface Props {\n    files: FileDescription[];\n    layout: Layout;\n    selectedFilePath: string | null;\n\n    onFileClick: (fd: FileDescription) => void;\n    onFileDoubleClick: (fd: FileDescription) => void;\n    onFileDownloadClick: (fd: FileDescription) => void;\n}\n\nexport default function (props: Props) {\n    return props.layout === Layout.Grid\n        ? <FileBrowserGrid\n            files={props.files}\n            selectedFilePath={props.selectedFilePath}\n            onFileClick={props.onFileClick}\n            onFileDoubleClick={props.onFileDoubleClick} />\n        : <FileBrowserList\n            files={props.files}\n            selectedFilePath={props.selectedFilePath}\n            onFileClick={props.onFileClick}\n            onFileDoubleClick={props.onFileDoubleClick}\n            onFileDownloadClick={props.onFileDownloadClick} />;\n}",["85","86"],"/usr/app/src/services/MesosTerm.ts",[],"/usr/app/src/App.tsx",[],["87","88"],"/usr/app/src/components/FileBrowserList.tsx",["89"],"/usr/app/src/utils/FileSize.ts",[],"/usr/app/src/components/DelegationFormDialog.tsx",["90"],"import React, { useState, ChangeEvent, Fragment } from \"react\";\nimport {\n    DialogTitle, Dialog, DialogContent, DialogActions, Button,\n    TextField, DialogContentText, FormControl, InputLabel, Select, MenuItem, makeStyles\n} from \"@material-ui/core\";\nimport { postGenerateDelegationToken } from \"../services/MesosTerm\";\nimport { useNotifications } from \"../hooks/NotificationContext\";\nimport classnames from \"classnames\";\n\nexport interface Props {\n    open: boolean;\n    taskID: string;\n\n    onClose: () => void;\n}\n\nexport default function (props: Props) {\n    const [duration, setDuration] = useState(\"1h\");\n    const [username, setUsername] = useState(\"\");\n    const [token, setToken] = useState(\"\");\n    const { createErrorNotification } = useNotifications();\n\n    const handleClose = () => {\n        setToken(\"\");\n        props.onClose();\n    }\n\n    const handleGenerate = async () => {\n        if (username === \"\") {\n            createErrorNotification(\"Provide a username to delegate access to\");\n        }\n\n        try {\n            const token = await postGenerateDelegationToken({\n                delegate_to: username,\n                task_id: props.taskID,\n                duration: duration,\n            });\n            setToken(token);\n        } catch (err) {\n            createErrorNotification(err.message);\n        }\n    }\n\n    const handleDurationChange = (e: ChangeEvent<{ value: unknown }>) => {\n        setDuration(e.target.value as string);\n    }\n\n    const handleUsernameChange = (e: ChangeEvent<{ value: string }>) => {\n        setUsername(e.target.value);\n    }\n\n    const delegationURL = window.location.protocol + \"//\" + window.location.hostname\n        + ((window.location.port) ? (':' + window.location.port) : '')\n        + `/task/${props.taskID}/terminal?access_token=${token}`;\n\n    return (\n        <Dialog open={props.open} id=\"delegation-dialog\">\n            <DialogTitle>\n                Access Delegation\n            </DialogTitle>\n            <DialogContent>\n                {token\n                    ? <TextField\n                        fullWidth\n                        label=\"Token\"\n                        value={delegationURL}\n                        className=\"token-field\"\n                        rows={8}\n                        multiline\n                        style={{ minWidth: \"500px\" }}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}>\n                    </TextField>\n                    : <DelegationForm\n                        taskID={props.taskID}\n                        duration={duration}\n                        username={username}\n                        onDurationChange={handleDurationChange}\n                        onUsernameChange={handleUsernameChange} />}\n            </DialogContent>\n            <DialogActions>\n                {!token\n                    ? <Button onClick={handleGenerate} className=\"generate-button\">\n                        Generate\n                    </Button>\n                    : null}\n                <Button onClick={handleClose} className=\"close-button\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\ninterface DelegationFormProps {\n    taskID: string;\n    duration: string;\n    username: string;\n\n    onDurationChange: (e: ChangeEvent<{ value: unknown }>) => void;\n    onUsernameChange: (e: ChangeEvent<{ value: string }>) => void;\n}\n\nfunction DelegationForm(props: DelegationFormProps) {\n    const classes = makeStyles(theme => ({\n        field: {\n            marginBottom: theme.spacing(2),\n        }\n    }))();\n\n    return (\n        <Fragment>\n            <DialogContentText>\n                Generate a delegation token to grant access to the current container for a limited period of time.\n        </DialogContentText>\n            <TextField\n                fullWidth\n                InputProps={{\n                    readOnly: true,\n                }}\n                id=\"task_id\"\n                label=\"Task ID\"\n                value={props.taskID}\n                type=\"text\"\n                className={classnames(classes.field, \"taskid-field\")}>\n            </TextField>\n            <TextField\n                fullWidth\n                id=\"username\"\n                label={\"Username\"}\n                type=\"text\"\n                value={props.username}\n                className={classnames(classes.field, \"username-field\")}\n                onChange={props.onUsernameChange}\n                InputLabelProps={{\n                    shrink: true,\n                }}>\n            </TextField>\n            <FormControl fullWidth className={classes.field}>\n                <InputLabel id=\"duration-label\">Duration</InputLabel>\n                <Select\n                    fullWidth\n                    labelId=\"duration-label\"\n                    id=\"duration-select\"\n                    className=\"duration-field\"\n                    value={props.duration}\n                    onChange={props.onDurationChange}\n                >\n                    <MenuItem value={\"1h\"}>1 hour</MenuItem>\n                    <MenuItem value={\"1d\"}>1 day</MenuItem>\n                    <MenuItem value={\"7d\"}>7 days</MenuItem>\n                    <MenuItem value={\"15d\"}>15 days</MenuItem>\n                </Select>\n            </FormControl>\n        </Fragment>\n    )\n}\n","/usr/app/src/components/FitAddon.ts",[],"/usr/app/src/serviceWorker.ts",[],"/usr/app/src/components/FileDescriptionBar.tsx",["91"],"/usr/app/src/hooks/FileReader.ts",[],"/usr/app/src/hooks/MemoizedCallback.ts",["92"],"/usr/app/src/constants.ts",[],"/usr/app/src/components/XTerm.tsx",["93"],{"ruleId":"94","severity":1,"message":"95","line":45,"column":36,"nodeType":"96","endLine":45,"endColumn":47},{"ruleId":"94","severity":1,"message":"95","line":46,"column":39,"nodeType":"96","endLine":46,"endColumn":50},{"ruleId":"94","severity":1,"message":"95","line":47,"column":36,"nodeType":"96","endLine":47,"endColumn":47},{"ruleId":"94","severity":1,"message":"95","line":48,"column":37,"nodeType":"96","endLine":48,"endColumn":48},{"ruleId":"97","severity":1,"message":"98","line":8,"column":1,"nodeType":"99","endLine":34,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":33,"column":1,"nodeType":"99","endLine":142,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":18,"column":1,"nodeType":"99","endLine":31,"endColumn":2},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"97","severity":1,"message":"98","line":21,"column":1,"nodeType":"99","endLine":67,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":17,"column":1,"nodeType":"99","endLine":95,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":25,"column":1,"nodeType":"99","endLine":76,"endColumn":2},{"ruleId":"94","severity":1,"message":"106","line":13,"column":29,"nodeType":"107","endLine":13,"endColumn":46,"suggestions":"108"},{"ruleId":"97","severity":1,"message":"98","line":26,"column":1,"nodeType":"99","endLine":165,"endColumn":2},"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"React Hook useCallback has a missing dependency: 'callback'. Either include it or remove the dependency array.","MemberExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [callback]",{"range":"114","text":"115"},[589,595],"[callback]"]